version: '3.1'

services:
  user-mariadb:
    container_name: user_mariadb
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mariadb1234
      MYSQL_DATABASE: miri_user
      TZ: Asia/Seoul
    ports:
      - 3308:3306
    volumes:
      - miri_user_data:/var/lib/mysql
    networks:
      - miri-network

  order-mariadb:
    container_name: order_mariadb
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mariadb1234
      MYSQL_DATABASE: miri_order
      TZ: Asia/Seoul
    ports:
      - 3309:3306
    volumes:
      - miri_order_data:/var/lib/mysql
    networks:
      - miri-network

  goods-mariadb:
    container_name: goods_mariadb
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mariadb1234
      MYSQL_DATABASE: miri_goods
      TZ: Asia/Seoul
    ports:
      - 3310:3306
    volumes:
      - miri_goods_data:/var/lib/mysql
    networks:
      - miri-network

  payment-mariadb:
    container_name: payment_mariadb
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mariadb1234
      MYSQL_DATABASE: miri_payment
      TZ: Asia/Seoul
    ports:
      - 3311:3306
    volumes:
      - miri_payment_data:/var/lib/mysql
    networks:
      - miri-network

  user-redis:
    container_name: user_redis
    image: redis
    ports:
      - "6380:6379"
    volumes:
      - redis_user_data:/data
    networks:
      - miri-network

  goods-redis:
    container_name: goods_redis
    image: redis
    ports:
      - "6381:6379"
    volumes:
      - redis_goods_data:/data
    networks:
      - miri-network

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_CREATE_TOPICS: "Topic:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock
    depends_on:
      - zookeeper

volumes:
  miri_user_data:
  miri_order_data:
  miri_goods_data:
  miri_payment_data:
  redis_user_data:
  redis_goods_data:

networks:
  miri-network:
    # driver: bridge
    # ipam:
    #   driver: default
    #   config:
    #     - subnet: 172.31.0.0/16
    #       gateway: 172.31.0.1
